#pragma once
/* WinApi C++ 17 */
#include <Windows.h>
#include <iostream>
#include <filesystem>
#include <fstream>
#include <string>
#include <direct.h>
#include <TlHelp32.h>
#include <vector>
#include <process.h>
#include <thread>
#include <bitset>
#include <mutex>
#include <array>

/* D3D SDK */
#include <DirectXMath.h>
#include "Vector.hpp"

/* String Encrypted */
#include "Xor.hpp"
#include "defs.hpp"

/* Offset & Address */
#include "Offset.hpp"

/* Lib */
#pragma comment(lib, "winmm.lib")

#define DEG2RAD(x) x * M_PI / 180.0
#define M_PI       3.14159265358979323846
#pragma warning(disable : 4996)

#define OFF_MEMB(type, name, offset)\
struct {\
    char zpad##name[offset];\
    type name;\
}\

namespace fs = std::filesystem;
using namespace DirectX;

enum eTeam
{
	TEAM_RED,
	TEAM_BLUE,
	TEAM_UNKNOWN1,
	TEAM_UNKNOWN2,
	TEAM_DEATHMATCH,
};
enum eHero : uint64_t
{
	HERO_REAPER = 0x2E0000000000002,
	HERO_TRACER = 0x2E0000000000003,
	HERO_MERCY = 0x2E0000000000004,
	HERO_HANJO = 0x2E0000000000005,
	HERO_TORBJORN = 0x2E0000000000006,
	HERO_REINHARDT = 0x2E0000000000007,
	HERO_PHARAH = 0x2E0000000000008,
	HERO_WINSTON = 0x2E0000000000009,
	HERO_WIDOWMAKER = 0x2E000000000000A,
	HERO_BASTION = 0x2E0000000000015,
	HERO_SYMMETRA = 0x2E0000000000016,
	HERO_ZENYATTA = 0x2E0000000000020,
	HERO_GENJI = 0x2E0000000000029,
	HERO_ROADHOG = 0x2E0000000000040,
	HERO_MCCREE = 0x2E0000000000042,
	HERO_JUNKRAT = 0x2E0000000000065,
	HERO_ZARYA = 0x2E0000000000068,
	HERO_SOLDIER76 = 0x2E000000000006E,
	HERO_LUCIO = 0x2E0000000000079,
	HERO_DVA = 0x2E000000000007A,
	HERO_MEI = 0x2E00000000000DD,
	HERO_ANA = 0x2E000000000013B,
	HERO_SOMBRA = 0x2E000000000012E,
	HERO_ORISA = 0x2E000000000013E,
	HERO_DOOMFIST = 0x2E000000000012F,
	HERO_MOIRA = 0x2E00000000001A2,
	HERO_BRIGITTE = 0x2E0000000000195,
	HERO_WRECKINGBALL = 0x2E00000000001CA,
	HERO_ASHE = 0x2E0000000000200,
	HERO_BAPTISTE = 0x2E0000000000221,
	HERO_SIGMA = 0x2E000000000023B,
	HERO_ECHO = 0x2E0000000000206,
	HERO_TRAININGBOT1 = 0x2E000000000016B,
	HERO_TRAININGBOT2 = 0x2E000000000016C,
	HERO_TRAININGBOT3 = 0x2E000000000016D,
	HERO_TRAININGBOT4 = 0x2E000000000016E,
};
enum eComponentType
{
	TYPE_ERROR = -1,
	TYPE_VELOCITY = 4,
	TYPE_TEAM = 0x1F,
	TYPE_ROTATION = 0x2D,
	TYPE_LINK = 0x32,
	TYPE_HEALTH = 0x39,
	TYPE_P_HEROID = 0x52,
	TYPE_BONE = 0x25,
	TYPE_PLAYERCONTROLLER = 0x41,
	TYPE_ANGLE = 0x31,
	TYPE_SKILL = 0x35,
	TYPE_OUTLINE = 0x5A,
	TYPE_P_VISIBILITY = 0x33,
};
enum BONE : int {
	BONE_HEAD = 17,
	BONE_NECK = 16,
	BONE_CHEST = 2,
	BONE_R_KNEE = 99,
	BONE_R_SHANK = 97,
	BONE_R_ANKLE = 96,
	BONE_R_SHOULDER = 54,
	BONE_R_ELBOW = 51,
	BONE_R_HAND = 71,
	BONE_L_KNEE = 89,
	BONE_L_SHANK = 87,
	BONE_L_ANKLE = 86,
	BONE_L_SHOULDER = 49,
	BONE_L_ELBOW = 14,
	BONE_L_HAND = 41,
	BONE_PELVIS = 3,
	BONE_BODY = 81,
	BONE_BODY_BOT = 82,
};

namespace JIN {
	inline UINT g_Width{}, g_Height{};
}